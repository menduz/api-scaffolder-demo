"use strict";
const express = require('express');
const demoApi = require('./api');
const base_1 = require('./api/base');
// initialize our express app
var app = express();
// initialize our classes
const controllers = demoApi.initializeControllers();
demoApi.registerRouter(controllers);
// register the security handler
base_1.DemoApiV1.SecurityMiddlewares.myCustomSec = (req, res, next) => {
    if (req.query['token'] != 'safe') {
        throw new base_1.DemoApiV1.HttpError.Unauthorized('invalid token');
    }
    next();
};
base_1.DemoApiV1.httpErrorHandler = (error, req, res, next) => {
    res.send(error.status, `<h1>${error.message || error.constructor.name}</h1>`);
};
// register our api middleware on express
app.use(demoApi.getMiddleware());
// run!
app.listen(3001, () => console.log('Listening on port 3001'));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxNQUFZLE9BQU8sV0FBTSxTQUFTLENBQUMsQ0FBQTtBQUNuQyxNQUFZLE9BQU8sV0FBTSxPQUFPLENBQUMsQ0FBQTtBQUNqQyx1QkFBMEIsWUFBWSxDQUFDLENBQUE7QUFFdkMsNkJBQTZCO0FBQzdCLElBQUksR0FBRyxHQUFHLE9BQU8sRUFBRSxDQUFDO0FBRXBCLHlCQUF5QjtBQUN6QixNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMscUJBQXFCLEVBQUUsQ0FBQztBQUNwRCxPQUFPLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBRXBDLGdDQUFnQztBQUVoQyxnQkFBUyxDQUFDLG1CQUFtQixDQUFDLFdBQVcsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSTtJQUN2RCxFQUFFLENBQUEsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLE1BQU0sQ0FBQyxDQUFBLENBQUM7UUFDN0IsTUFBTSxJQUFJLGdCQUFTLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUNoRSxDQUFDO0lBQ0QsSUFBSSxFQUFFLENBQUM7QUFDWCxDQUFDLENBQUE7QUFFRCxnQkFBUyxDQUFDLGdCQUFnQixHQUFHLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSTtJQUMvQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsT0FBTyxLQUFLLENBQUMsT0FBTyxJQUFJLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxPQUFPLENBQUMsQ0FBQztBQUNsRixDQUFDLENBQUE7QUFFRCx5Q0FBeUM7QUFDekMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQztBQUlqQyxPQUFPO0FBQ1AsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsTUFBTSxPQUFPLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgKiBhcyBkZW1vQXBpIGZyb20gJy4vYXBpJztcbmltcG9ydCB7IERlbW9BcGlWMSB9IGZyb20gJy4vYXBpL2Jhc2UnO1xuXG4vLyBpbml0aWFsaXplIG91ciBleHByZXNzIGFwcFxudmFyIGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gaW5pdGlhbGl6ZSBvdXIgY2xhc3Nlc1xuY29uc3QgY29udHJvbGxlcnMgPSBkZW1vQXBpLmluaXRpYWxpemVDb250cm9sbGVycygpO1xuZGVtb0FwaS5yZWdpc3RlclJvdXRlcihjb250cm9sbGVycyk7XG5cbi8vIHJlZ2lzdGVyIHRoZSBzZWN1cml0eSBoYW5kbGVyXG5cbkRlbW9BcGlWMS5TZWN1cml0eU1pZGRsZXdhcmVzLm15Q3VzdG9tU2VjID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgaWYocmVxLnF1ZXJ5Wyd0b2tlbiddICE9ICdzYWZlJyl7XG4gICAgICAgIHRocm93IG5ldyBEZW1vQXBpVjEuSHR0cEVycm9yLlVuYXV0aG9yaXplZCgnaW52YWxpZCB0b2tlbicpO1xuICAgIH1cbiAgICBuZXh0KCk7XG59XG5cbkRlbW9BcGlWMS5odHRwRXJyb3JIYW5kbGVyID0gKGVycm9yLCByZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcy5zZW5kKGVycm9yLnN0YXR1cywgYDxoMT4ke2Vycm9yLm1lc3NhZ2UgfHwgZXJyb3IuY29uc3RydWN0b3IubmFtZX08L2gxPmApO1xufVxuXG4vLyByZWdpc3RlciBvdXIgYXBpIG1pZGRsZXdhcmUgb24gZXhwcmVzc1xuYXBwLnVzZShkZW1vQXBpLmdldE1pZGRsZXdhcmUoKSk7XG5cblxuXG4vLyBydW4hXG5hcHAubGlzdGVuKDMwMDEsICgpID0+IGNvbnNvbGUubG9nKCdMaXN0ZW5pbmcgb24gcG9ydCAzMDAxJykpOyJdfQ==