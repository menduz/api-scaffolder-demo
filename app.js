"use strict";
const express = require('express');
const demoApi = require('./api');
const base_1 = require('./api/base');
// initialize our express app
var app = express();
// initialize our classes
const controllers = demoApi.initializeControllers();
demoApi.registerRouter(controllers);
// register the security handler
base_1.DemoApi_V1.SecurityMiddlewares.myCustomSec = (req, res, next) => {
    if (req.query['token'] != 'safe') {
        throw new base_1.HttpError.Unauthorized('invalid token');
    }
    next();
};
base_1.DemoApi_V1.httpErrorHandler = (error, req, res, next) => {
    res.status(error.status).send(`<h1>${error.message || error.constructor.name}</h1>`);
};
// register our api middleware on express
app.use(demoApi.getMiddleware());
// run!
app.listen(3001, () => console.log('Listening on port 3001'));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxNQUFZLE9BQU8sV0FBTSxTQUFTLENBQUMsQ0FBQTtBQUNuQyxNQUFZLE9BQU8sV0FBTSxPQUFPLENBQUMsQ0FBQTtBQUNqQyx1QkFBc0MsWUFBWSxDQUFDLENBQUE7QUFFbkQsNkJBQTZCO0FBQzdCLElBQUksR0FBRyxHQUFHLE9BQU8sRUFBRSxDQUFDO0FBRXBCLHlCQUF5QjtBQUN6QixNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMscUJBQXFCLEVBQUUsQ0FBQztBQUNwRCxPQUFPLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBRXBDLGdDQUFnQztBQUVoQyxpQkFBVSxDQUFDLG1CQUFtQixDQUFDLFdBQVcsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSTtJQUN4RCxFQUFFLENBQUEsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLE1BQU0sQ0FBQyxDQUFBLENBQUM7UUFDN0IsTUFBTSxJQUFJLGdCQUFTLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFDRCxJQUFJLEVBQUUsQ0FBQztBQUNYLENBQUMsQ0FBQTtBQUVELGlCQUFVLENBQUMsZ0JBQWdCLEdBQUcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJO0lBQ2hELEdBQUcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEtBQUssQ0FBQyxPQUFPLElBQUksS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxDQUFDO0FBQ3pGLENBQUMsQ0FBQTtBQUVELHlDQUF5QztBQUN6QyxHQUFHLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDO0FBSWpDLE9BQU87QUFDUCxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCAqIGFzIGRlbW9BcGkgZnJvbSAnLi9hcGknO1xuaW1wb3J0IHsgRGVtb0FwaV9WMSwgSHR0cEVycm9yIH0gZnJvbSAnLi9hcGkvYmFzZSc7XG5cbi8vIGluaXRpYWxpemUgb3VyIGV4cHJlc3MgYXBwXG52YXIgYXBwID0gZXhwcmVzcygpO1xuXG4vLyBpbml0aWFsaXplIG91ciBjbGFzc2VzXG5jb25zdCBjb250cm9sbGVycyA9IGRlbW9BcGkuaW5pdGlhbGl6ZUNvbnRyb2xsZXJzKCk7XG5kZW1vQXBpLnJlZ2lzdGVyUm91dGVyKGNvbnRyb2xsZXJzKTtcblxuLy8gcmVnaXN0ZXIgdGhlIHNlY3VyaXR5IGhhbmRsZXJcblxuRGVtb0FwaV9WMS5TZWN1cml0eU1pZGRsZXdhcmVzLm15Q3VzdG9tU2VjID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgaWYocmVxLnF1ZXJ5Wyd0b2tlbiddICE9ICdzYWZlJyl7XG4gICAgICAgIHRocm93IG5ldyBIdHRwRXJyb3IuVW5hdXRob3JpemVkKCdpbnZhbGlkIHRva2VuJyk7XG4gICAgfVxuICAgIG5leHQoKTtcbn1cblxuRGVtb0FwaV9WMS5odHRwRXJyb3JIYW5kbGVyID0gKGVycm9yLCByZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcy5zdGF0dXMoZXJyb3Iuc3RhdHVzKS5zZW5kKGA8aDE+JHtlcnJvci5tZXNzYWdlIHx8IGVycm9yLmNvbnN0cnVjdG9yLm5hbWV9PC9oMT5gKTtcbn1cblxuLy8gcmVnaXN0ZXIgb3VyIGFwaSBtaWRkbGV3YXJlIG9uIGV4cHJlc3NcbmFwcC51c2UoZGVtb0FwaS5nZXRNaWRkbGV3YXJlKCkpO1xuXG5cblxuLy8gcnVuIVxuYXBwLmxpc3RlbigzMDAxLCAoKSA9PiBjb25zb2xlLmxvZygnTGlzdGVuaW5nIG9uIHBvcnQgMzAwMScpKTsiXX0=